tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4.1/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4.1/plugin.yaml

inputs:
  prefix:
    description: >
      Unique string to be added as a prefix for resource names.

  instance_type:
    type: string
    default: m3.medium

  image_id:
    type: string

  key_pair_path:
    type: string

  aws_access_key_id:
    type: string

  aws_secret_access_key:
    type: string

  ec2_region_name:
    type: string

node_templates:

  elastic_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-elastic-ip'] }
      aws_config: &AWS_CONFIG
        aws_access_key_id: { get_input: aws_access_key_id }
        aws_secret_access_key: { get_input: aws_secret_access_key }
        ec2_region_name: { get_input: ec2_region_name }

  security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      description: Created for the VM that is used by a test to do the whole work
      resource_id: { concat: [{ get_input: prefix }, '-security-group'] }
      rules:
        - ip_protocol: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - ip_protocol: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
      aws_config: *AWS_CONFIG

  keypair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-keypair'] }
      private_key_path: { get_input: key_pair_path }
      aws_config: *AWS_CONFIG

  server:
    type: cloudify.aws.nodes.Instance
    properties:
      install_agent: false
      image_id: { get_input: image_id }
      instance_type: { get_input: instance_type }
      aws_config: *AWS_CONFIG
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_elastic_ip
        target: elastic_ip
      - type: cloudify.aws.relationships.instance_connected_to_keypair
        target: keypair
      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: security_group

outputs:
  vm_public_ip_address:
    description: Public IP of the worker VM created for purposes of a test
    value: { get_attribute: [elastic_ip, aws_resource_id] }
  vm_private_ip_address:
    value: { get_attribute: [server, ip]}
